# Generated by Django 4.2 on 2025-09-28 15:28

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyIntake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_protein', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_calories', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fdc_id', models.CharField(help_text='FDC ID from USDA API', max_length=20, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('brand_owner', models.CharField(blank=True, max_length=200, null=True)),
                ('protein_per_100g', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('calories_per_100g', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('carbs_per_100g', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('fat_per_100g', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('fiber_per_100g', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_protein_goal', models.FloatField(default=50.0, help_text='Daily protein goal in grams', validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(500)])),
                ('weight', models.FloatField(blank=True, help_text='Body weight in kg', null=True, validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(300)])),
                ('activity_level', models.CharField(choices=[('sedentary', 'Sedentary'), ('light', 'Light Activity'), ('moderate', 'Moderate Activity'), ('active', 'Very Active'), ('extra_active', 'Extra Active')], default='moderate', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FoodEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_grams', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)])),
                ('protein_consumed', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('calories_consumed', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('meal_type', models.CharField(choices=[('breakfast', 'Breakfast'), ('lunch', 'Lunch'), ('dinner', 'Dinner'), ('snack', 'Snack')], default='snack', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('daily_intake', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='api.dailyintake')),
                ('food_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.fooditem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FavoriteFood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_amount', models.FloatField(help_text='Default serving size in grams', validators=[django.core.validators.MinValueValidator(0.1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('food_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.fooditem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['food_item__name'],
                'unique_together': {('user', 'food_item')},
            },
        ),
    ]
